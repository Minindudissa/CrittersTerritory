import { callAdminAuthApi } from "@/services";
import { createContext, useEffect, useState } from "react";
import { useLocation, useNavigate } from "react-router-dom";

export const AdminAuthContext = createContext(null);
function AdminAuthContextProvider({ children }) {
  const [admin, setAdmin] = useState(null);
  const navigate = useNavigate();
  const location = useLocation();
  useEffect(() => {
    const verifyAdminCookie = async () => {
      const data = await callAdminAuthApi();
      // console.log(data?.adminInfo?.firstName);

      if (data?.adminInfo) {
        setAdmin(data?.adminInfo);
      }
      if (data?.adminInfo?.firstName === "Admin") {
        return data?.success
          ? location.pathname.includes("admin")
            ? navigate("/admin/profile")
            : navigate(location.pathname)
          : null;
      } else {
        return data?.success
          ? navigate(
              location.pathname === "/auth/admin" ||
                location.pathname === "/auth/admin/login"
                ? "/admin/dashboard"
                : data?.adminInfo?.accountStatus !== 2
                  ? location.pathname === "/admin/variations" ||
                    location.pathname === "/admin/page-top-banner" ||
                    location.pathname === "/admin/registerAdmin" ||
                    location.pathname === "/admin/category" ||
                    location.pathname === "/admin/vouchers-discounts"
                    ? "/admin/controlRoom"
                    : `${location.pathname}`
                  : `${location.pathname}`
            )
          : navigate(
              location.pathname.includes("/admin")
                ? "/auth/admin/login"
                : `${location.pathname}`
            );
      }
    };

    verifyAdminCookie();
  }, [navigate, location.pathname]);

  return (
    <AdminAuthContext.Provider value={{ admin, setAdmin }}>
      {children}
    </AdminAuthContext.Provider>
  );
}

export default AdminAuthContextProvider;
